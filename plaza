#!/usr/bin/env bash

# exit after any error
set -e 

# go to where the script is
DIR=$(dirname "$0")
cd "$DIR"

SCRIPT=$(basename "$0")

function get_override_files()
{
    if [ -f "$DIR/../globals.ts" ]; then
        cp "$DIR/../globals.ts" "./shared/globals.ts"
    fi

    if [ -f "$DIR/../secret.ts" ]; then
        cp "$DIR/../secret.ts" "./server/secret/secret.ts"
    fi
}

# FUNCTIONS
function install_deps()
{
    echo "updating ubuntu"
    apt-get update
    apt-get upgrade
    
    echo "installing ubuntu dependencies"
    xargs -a ./ubuntu-deps.txt apt-get -y install
    
    echo "installing npm global dependencies"
    npm i -g npm@6.14.13
    npm i -g @angular/cli@11.2.9 node-gyp@8.1.0 ts-node@9.1.1 typescript@4.2.4

    echo "installing npm dependencies"
    npm i

    echo "successfully installed dependencies"
}

function update()
{
    echo "updating..."
    git reset --hard
    git pull
    echo "successfully updated, run \"$SCRIPT build\" to build new version"
}

function build()
{
    get_override_files
    if [[ x"$1" == x"debug" ]]; then
        ng build
    else
        ng build --prod
    fi
}

function start_plaza()
{
    get_override_files
    if [[ x"$1" == x"debug" ]]; then
        ts-node server/main.ts
    else
        ts-node --transpile-only server/main.ts
    fi
}

function show_help()
{
    cat << EOF
$SCRIPT <command>
control $SCRIPT

COMMANDS
help            show this help and exit
install-deps    install dependencies
update          fetch updates from github
build           builds the website
build debug     builds the website in debug mode
start           starts the server
start debug     starts the server in debug mode
EOF
}

# MAIN
if [[ x"$1" == x"" ]]; then
    echo "error: expecting command, run \"$SCRIPT help\" to show commands"
    exit 1
fi

case "$1" in
    install-deps)
        install_deps
        ;;

    update)
        update
        ;;

    build)
        build "$2"
        ;;

    start)
        start_plaza "$2"
        ;;

    help)
        show_help
        ;;

    *)
        echo "unrecognized command, run \"$SCRIPT help\" to show commands"
        exit 1
esac
